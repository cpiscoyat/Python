# -*- coding: utf-8 -*-
"""Taller_II y III.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KCTTpRuwNchBe_Yqb_z16LBv-vVhvV7d

Ejercicio 11 : Escriba un programa que permita crear
dos listas de palabras y que, a
continuación, escriba las siguientes
listas (en las que no debe haber
repeticiones):
a. Lista de palabras que aparecen
en las dos listas.
b. Lista de palabras que aparecen
en la primera lista, pero no en la
segunda.
c. Lista de palabras que aparecen
en la segunda lista, pero no en
la primera.
d. Lista de palabras que aparecen
en ambas listas.
Nota: Para evitar las repeticiones, el
programa deberá empezar eliminando
los elementos repetidos en cada lista.
"""

lista1=["Manzana","Pera","Durazno","Plátano","Mandarina","Naranja"]
#listaTemporal=lista1
listaTemporal=lista1[0:len(lista1)] #slice o porcion
lista2=["Papaya","Pera","Piña","Plátano"]
#parte a
for x in lista2:
  lista1.append(x)
#lista1.append(lista2)
print(lista1)

#parte b
conjunto1=set(listaTemporal)
conjunto2=set(lista2)
print(conjunto1 -conjunto2)

#parte c
print(conjunto2-conjunto1)

#print d
print(conjunto1 & conjunto2)

lista1=["Manzana","Pera","Durazno","Plátano","Mandarina","Naranja"]
lista2=["Papaya","Pera","Piña","Plátano"]

conjunto1=set(lista1)
conjunto2=set(lista2)
#parte a
print(list(conjunto1 | conjunto2)) # union
#parte b
print(list(conjunto1 -conjunto2)) #diferencia c1
#parte c
print(list(conjunto2-conjunto1)) #diferencia c2
#print d
print(list(conjunto1 & conjunto2)) #interseccion

"""Ejercicio 12: Escribir una función que reciba una lista
de elementos e indique si se
encuentran ordenados de menor a
mayor o no.
"""

lista=[3,5,7,9]
def Verificar(l):
  listaX=l[0:len(l)]
  #print(lista)
  l.sort()
  #print(lista)
  #print(listaX)
  if (l==listaX):
    print("Ordenados")
  else:
    print("Desordenados")

Verificar(lista)

#def Verificar(lista):
#tupla=tuple(lista)
#print(lista)
#print(tupla)

"""Ejercicio 22: Escribir un programa Python que dado una palabra diga si es un palíndromo. Un palíndromo es una palabra, número o frase que se lee igual hacia adelante que hacia atrás. Ejemplo: reconocer"""

palabra="ana"
palabrainvertida=""
for l in palabra: #r
  palabrainvertida=l+palabrainvertida #nocer
if palabra==palabrainvertida:
  print("Es palíndromo")
else:
  print("No es palíndromo")